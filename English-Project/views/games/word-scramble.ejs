<%- include('../partials/header') %>

<div class="game-container">
    <h1>Word Scramble Challenge</h1>
    <p class="game-description">Unscramble these words related to food waste and sustainability. Type your answer in the input box and click 'Check' or press Enter.</p>
    
    <div class="game-box">
        <div class="score-display">
            Score: <span id="score">0</span>
        </div>
        
        <div class="word-display">
            <h2 id="scrambled-word"></h2>
            <p id="word-hint" class="hint"></p>
        </div>
        
        <div class="game-input">
            <input type="text" id="user-input" placeholder="Type your answer here..." autocomplete="off">
            <button id="check-btn">Check</button>
        </div>
        
        <div class="game-feedback">
            <p id="feedback-text"></p>
        </div>
        
        <div class="game-controls">
            <button id="next-word">Next Word</button>
            <button id="new-game">New Game</button>
        </div>
    </div>
</div>

<style>
.game-container {
    max-width: 800px;
    margin: 100px auto 40px;
    padding: 20px;
}

.game-description {
    color: #666;
    margin-bottom: 30px;
    text-align: center;
}

.game-box {
    background: white;
    border-radius: 12px;
    padding: 30px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.score-display {
    text-align: right;
    font-size: 1.2rem;
    font-weight: 600;
    color: #1a73e8;
    margin-bottom: 20px;
}

.word-display {
    text-align: center;
    margin-bottom: 30px;
}

.word-display h2 {
    font-size: 2.5rem;
    color: #333;
    margin-bottom: 10px;
    letter-spacing: 3px;
}

.hint {
    color: #666;
    font-style: italic;
}

.game-input {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
}

.game-input input {
    flex: 1;
    padding: 12px;
    font-size: 1.1rem;
    border: 2px solid #e0e0e0;
    border-radius: 6px;
    transition: border-color 0.3s;
}

.game-input input:focus {
    outline: none;
    border-color: #1a73e8;
}

.game-input button {
    padding: 12px 24px;
    background: #1a73e8;
    color: white;
    border: none;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: background 0.3s;
}

.game-input button:hover {
    background: #1557b0;
}

.game-feedback {
    text-align: center;
    min-height: 24px;
    margin-bottom: 20px;
}

.game-feedback p {
    margin: 0;
    font-weight: 500;
}

.game-feedback p.correct {
    color: #2f855a;
}

.game-feedback p.incorrect {
    color: #dc3545;
}

.game-controls {
    display: flex;
    gap: 10px;
    justify-content: center;
}

.game-controls button {
    padding: 10px 20px;
    background: #f5f5f5;
    color: #333;
    border: none;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s;
}

.game-controls button:hover {
    background: #e0e0e0;
}

@media (max-width: 600px) {
    .game-container {
        padding: 10px;
        margin-top: 80px;
    }
    
    .word-display h2 {
        font-size: 2rem;
    }
    
    .game-input {
        flex-direction: column;
    }
    
    .game-input button {
        width: 100%;
    }
}
</style>

<script>
const words = [
    { word: 'COMPOST', hint: 'Natural recycling of organic waste' },
    { word: 'LEFTOVERS', hint: 'Remaining food after a meal' },
    { word: 'SUSTAINABLE', hint: 'Able to maintain without depleting resources' },
    { word: 'RECYCLING', hint: 'Process of converting waste into reusable material' },
    { word: 'PRESERVATION', hint: 'Keeping food fresh for longer periods' },
    { word: 'WASTAGE', hint: 'Unnecessary loss or disposal' },
    { word: 'ORGANIC', hint: 'Produced without artificial chemicals' },
    { word: 'BIODEGRADABLE', hint: 'Capable of being decomposed naturally' },
    { word: 'CONSERVATION', hint: 'Prevention of wasteful use of resources' },
    { word: 'COMPOSTING', hint: 'Converting organic waste into fertilizer' }
];

let currentWord = '';
let currentScore = 0;
let wordIndex = 0;

function shuffleWord(word) {
    const array = word.split('');
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
    return array.join('');
}

function displayNewWord() {
    if (wordIndex >= words.length) {
        wordIndex = 0;
        words.sort(() => Math.random() - 0.5);
    }
    
    currentWord = words[wordIndex].word;
    let scrambledWord = shuffleWord(currentWord);
    
    // Make sure the scrambled word is different from the original
    while (scrambledWord === currentWord) {
        scrambledWord = shuffleWord(currentWord);
    }
    
    document.getElementById('scrambled-word').textContent = scrambledWord;
    document.getElementById('word-hint').textContent = words[wordIndex].hint;
    document.getElementById('user-input').value = '';
    document.getElementById('feedback-text').textContent = '';
    wordIndex++;
}

function checkAnswer() {
    const userInput = document.getElementById('user-input').value.toUpperCase();
    const feedbackText = document.getElementById('feedback-text');
    
    if (userInput === currentWord) {
        currentScore += 10;
        document.getElementById('score').textContent = currentScore;
        feedbackText.textContent = 'Correct! +10 points';
        feedbackText.className = 'correct';
        setTimeout(displayNewWord, 1500);
    } else {
        feedbackText.textContent = 'Try again!';
        feedbackText.className = 'incorrect';
    }
}

function startNewGame() {
    currentScore = 0;
    wordIndex = 0;
    document.getElementById('score').textContent = currentScore;
    words.sort(() => Math.random() - 0.5);
    displayNewWord();
}

// Event Listeners
document.getElementById('check-btn').addEventListener('click', checkAnswer);
document.getElementById('next-word').addEventListener('click', displayNewWord);
document.getElementById('new-game').addEventListener('click', startNewGame);

document.getElementById('user-input').addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
        checkAnswer();
    }
});

// Start the game
startNewGame();
</script>

<%- include('../partials/footer') %> 